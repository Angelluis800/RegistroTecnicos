@page "/Incentivo/Eliminar/incentivoid={IncentivoId:int}"
@rendermode InteractiveServer
@inject IncentivoService incentivoService
@inject NavigationManager navigation

<PageTitle>Eliminar Incentivo</PageTitle>
<Toasts class="p-3" Messages="Mensajes" Placement="ToastsPlacement.TopRight" Delay="5000" />
<div class="container">
    <div class="card shadow-lg">
        @*Header*@
        <div class="card-header text-white text-center">
            <div class="bg-info rounded">
                <h1>Eliminar Incentivo</h1>
            </div>           
        </div>
        @*Body*@
        <div class="card-body">
             <div class="text-danger text-center">
                <h3>Desea Eliminar el Incentivo: @Incentivo?.Descripcion ?</h3>
            </div>
            <ul>
                <li>ID: @Incentivo?.IncentivoId</li>              
                <li>Name: @Incentivo?.Descripcion</li>
                <li>Tipo: @Incentivo?.TiposTecnicos?.Descripcion</li>
            </ul>
        </div>
        @*Footer*@
        <div class="card-footer">
            <button class="btn btn btn-outline-danger bi bi-trash" type="button" @onclick="Eliminar">Eliminar</button>
            <button class="btn btn-outline-secondary" type="button" @onclick="Volver">Volver</button>
        </div>
    </div>
</div>
   
@code {

    public Incentivos? Incentivo { get; set; } = new Incentivos();
    [Parameter]
    public int IncentivoId { get; set; } 
    List<ToastMessage> Mensajes = new List<ToastMessage>();

    protected override async Task OnInitializedAsync()
    {
        Incentivo = await incentivoService.BuscarId(IncentivoId);
    }

    public async Task Eliminar()
    {
        await incentivoService.Eliminar(IncentivoId);
        MostrarMensaje(ToastType.Success, "Incentivo Eliminado Correctamente");
    }

    public void Volver() => navigation.NavigateTo("/Incentivo/Index");

    private void MostrarMensaje(ToastType toastType, string message)
    {
        Mensajes.Add(CrearMensaje(toastType, message));
    }

    private ToastMessage CrearMensaje(ToastType toastType, string message)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Notificación",
            HelpText = $"{DateTime.Now}",
            Message = message,
        };
}
