@page "/Tecnico/Eliminar/tecnicoid={idTecnico:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject TipoTecnicoService tipoTecnicoService
@inject NavigationManager navigation

<PageTitle>Eliminar T&eacute;cnico</PageTitle>
<Toasts class="p-3" Messages="Mensajes" Placement="ToastsPlacement.TopRight" Delay="5000" />
<div class="container">
    <div class="card shadow-lg">
        @*Header*@
        <div class="card-header text-white text-center">
            <div class="bg-info rounded">
                <h1>Eliminar T&eacute;cnico</h1>
            </div           
        </div>
        @*Body*@
        <div class="card-body">
             <div class="text-danger text-center">
                <h3>Desea Eliminar el T&eacute;cnico @Tecnico.Nombres?</h3>
            </div>
            <ul>
                <li>ID: @Tecnico.TecnicoId</li>              
                <li>Name: @Tecnico.Nombres</li>
                <li>Sueldo: @Tecnico.SueldoHora.ToString("N2")</li>   
                <li>Tipo: @Tecnico?.TiposTecnicos?.Descripcion</li>
            </ul>
        </div>
        @*Footer*@
        <div class="card-footer">
            <button class="btn btn btn-outline-danger bi bi-trash" type="button" @onclick="Eliminar">Eliminar</button>
            <button class="btn btn-outline-secondary" type="button" @onclick="Volver">Volver</button>
        </div>
    </div>
</div>
   
@code {

    public Tecnicos? Tecnico { get; set; } = new Tecnicos();
    [Parameter] // Poner esto para que en el page pueda recibirlo como paramétro
    public int idTecnico { get; set; }
    List<ToastMessage> Mensajes = new List<ToastMessage>();

    protected override async Task OnInitializedAsync()
    {
        Tecnico = await tecnicoService.BuscarId(idTecnico);
    }

    public async Task Eliminar()
    {
        await tecnicoService.Eliminar(idTecnico);
        MostrarMensaje(ToastType.Success, "Técnico Eliminado Correctamente");
    }

    public void Volver() => navigation.NavigateTo("/Tecnico/Index");

    private void MostrarMensaje(ToastType toastType, string message)
    {
        Mensajes.Add(CrearMensaje(toastType, message));
    }

    private ToastMessage CrearMensaje(ToastType toastType, string message)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Notificación",
            HelpText = $"{DateTime.Now}",
            Message = message,
        };
}
