@page "/Tecnico/Visualizar/tecnicoid={idTecnico:int}"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject TipoTecnicoService tipoTecnicoService
@inject NavigationManager navigation

<PageTitle>Detalles</PageTitle>

<div class="container">
    <div class="card shadow-lg">
        @*Header*@
        <div class="card-header text-white text-center">
            <div class="bg-info rounded">
                <h1>Detalles del T&eacute;nico</h1>
            </div           
        </div>
        @*Body*@
        <div class="card-body">           
            <ul>
                <li>ID: @Tecnico.TecnicoId</li>              
                <li>Name: @Tecnico.Nombres</li>
                <li>Tipo: @ObtenerTipo(Tecnico.idTipo)</li>
                <li>Sueldo: @Tecnico.SueldoHora.ToString("N2")</li>               
            </ul>
        </div>
        @*Footer*@
        <div class="card-footer">
            <button class="btn btn-outline-secondary" type="button" @onclick="Volver">Volver</button>
        </div>
    </div>
</div>
   
@code {

    public Tecnicos? Tecnico { get; set; } = new Tecnicos();
    public List<TiposTecnicos> ListaTipos = new List<TiposTecnicos>();
    [Parameter] // Poner esto para que en el page pueda recibirlo como parametro
    public int idTecnico { get; set; }

    protected override async Task OnInitializedAsync()
    {        
        Tecnico = await tecnicoService.BuscarId(idTecnico);
        ListaTipos = await tipoTecnicoService.Listar(e => true);
    }

    public string ObtenerTipo(int id)
    {
        var tipo = ListaTipos.FirstOrDefault(t => t.TipoId == id);

        return tipo.Descripcion;
    }

    public void Volver() => navigation.NavigateTo("/Tecnico/Index");
}
