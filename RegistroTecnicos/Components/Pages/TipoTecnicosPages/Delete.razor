@page "/TipoTecnico/Eliminar/tecnicoid={IdTipoTecnico:int}"
@rendermode InteractiveServer
@inject TipoTecnicoService tipoTecnicoService
@inject NavigationManager navigation

<PageTitle>Eliminar Tipo de T&eacute;cnico</PageTitle>
<Toasts class="p-3" Messages="Mensajes" Placement="ToastsPlacement.TopRight" Delay="5000" />
<div class="container">
    <div class="card shadow-lg">
        @*Header*@
        <div class="card-header text-white text-center">
            <div class="bg-info rounded">
                <h1>Eliminar Tipo de T&eacute;cnico</h1>
            </div           
        </div>
        @*Body*@
        <div class="card-body">
             <div class="text-danger text-center">
                <h3>Desea Eliminar: @TipoTecnico.Descripcion</h3>
            </div>
            <ul>
                <li>ID: @TipoTecnico.TipoId</li>              
                <li>Descripci&oacute;n: @TipoTecnico.Descripcion</li>                           
            </ul>
        </div>
        @*Footer*@
        <div class="card-footer">
            <button class="btn btn btn-outline-danger bi bi-trash" type="button" @onclick="Eliminar">Eliminar</button>
            <button class="btn btn-outline-secondary" type="button" @onclick="Volver">Volver</button>
        </div>
    </div>
</div>
   
@code {

    public TiposTecnicos? TipoTecnico { get; set; } = new TiposTecnicos();
    [Parameter] // Poner esto para que en el page pueda recibirlo como paramétro
    public int IdTipoTecnico { get; set; }
    List<ToastMessage> Mensajes = new List<ToastMessage>();

    protected override async Task OnInitializedAsync()
    {
        TipoTecnico = await tipoTecnicoService.BuscarId(IdTipoTecnico);
    }

    public async Task Eliminar()
    {
        await tipoTecnicoService.Eliminar(IdTipoTecnico);
        MostrarMensaje(ToastType.Success, "Tipo Eliminado Correctamente");
    }

    public void Volver() => navigation.NavigateTo("/TipoTecnico/Index");

    private void MostrarMensaje(ToastType toastType, string message)
    {
        Mensajes.Add(CrearMensaje(toastType, message));
    }

    private ToastMessage CrearMensaje(ToastType toastType, string message)
    => new ToastMessage
        {
            Type = toastType,
            Title = "Notificación",
            HelpText = $"{DateTime.Now}",
            Message = message,
        };
}
